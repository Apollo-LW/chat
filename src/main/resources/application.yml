user:
  kafka:
    store: user-room-state-store

room:
  kafka:
    topic: room
    store: room-state-store

chat:
  kafka:
    server: localhost:9092
    topic: chat
    replicas: 1
    partitions: 1
    store: room-messages-state-store
    retention: -1
    acks: all
    retries: 10
    requestimeout: 5000
    batch: 163850
    linger: 100
    max-in-flight: 1
    client-id: apollo-chat
    group-id: apollo-chat-group
    offset: latest

spring:
  cloud:
    function:
      definition: roomMessagesProcessorState;userRoomProcessor;roomProcessorState;
    stream:
      kafka:
        streams:
          binder:
            functions:
              roomMessagesProcessorState:
                application-id: apollo-room-message
              userRoomProcessor:
                application-id: apollo-room-user
              roomProcessorState:
                application-id: apollo-room
      bindings:
        roomMessagesProcessorState-in-0.destination: ${chat.kafka.topic}
        roomMessagesProcessorState-out-0.destination: ${chat.kafka.store}
        userRoomProcessor-in-0.destination: ${room.kafka.topic}
        userRoomProcessor-out-0.destination: ${user.kafka.store}
        roomProcessorState-in-0.destination: ${room.kafka.topic}
        roomProcessorState-out-0.destination: ${room.kafka.store}
server:
  port: 8083

